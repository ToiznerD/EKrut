package controllers;

import java.io.IOException;

import Util.Msg;
import Util.Tasks;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseEvent;

/**
*
* The CreateCustomerController class is a controller class for the "Create Customer" feature in a JavaFX application.
* It handles the creation of a new customer in the database by validating user input and sending appropriate database
* queries. It also displays error messages to the user if necessary.
*/

public class CreateCustomerController extends AbstractController{

  @FXML
    private Button btnCreate;

    @FXML
    private Label errAddress;

    @FXML
    private Label errCC;

    @FXML
    private Label errEmail;

    @FXML
    private Label errName;

    @FXML
    private Label errPassword;

    @FXML
    private Label errPhone;

    @FXML
    private Label errUser;

    @FXML
    private Label lblErr;

    @FXML
    private TextField txtAddress;

    @FXML
    private TextField txtCC;

    @FXML
    private TextField txtEmail;

    @FXML
    private TextField txtName;

    @FXML
    private TextField txtPassword;

    @FXML
    private TextField txtPhone;

    @FXML
    private TextField txtUser;
	   
    
    /**
     * Handles the creation of a new customer. Validates input and adds the customer to the database.
     *
     * @param event The ActionEvent that triggered this method.
     */
    @FXML
    void customerCreate(ActionEvent event) {
    	cleanErrors();
    	boolean legit = true;
    	
    	String username = txtUser.getText();
    	if(username.equals("")) {errUser.setText("Please fill in"); legit = false;}
    	
    	String password = txtPassword.getText();
    	if(password.equals("")) {errPassword.setText("Please fill in"); legit = false;}
    	
    	String name = txtName.getText();
    	if(name.equals("")) {errName.setText("Please fill in"); legit = false;}
    	
    	String phone = txtPhone.getText();
    	if(phone.equals("")) {errPhone.setText("Please fill in"); legit = false;}
    	
    	String address = txtAddress.getText();
    	if(address.equals("")) {errAddress.setText("Please fill in"); legit = false;}
    	
    	String email = txtEmail.getText();
    	if(email.equals("")) {errEmail.setText("Please fill in"); legit = false;}
    	
    	String creditcard = txtCC.getText();
    	if(creditcard.equals("")) {errCC.setText("Please fill in"); legit = false;}
    	
    	if(!legit) {
    		return;
    	}
    	//Add user to users table
    	String query = String.format("INSERT INTO users (user, password, role, name, phone, address, email, isLogged) "
    			+ "VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s', 0)", username, password, "customer", name, phone, address, email);
    	msg = new Msg(Tasks.CreateCustomer, Tasks.CreateCustomer_Insert_User, query);
    	sendMsg(msg);
    	if(msg.getInt() == 0) {lblErr.setText("Something went wrong"); return;}
    	
    	//Get the user ID generated by user creation
    	String query2 = String.format("SELECT id FROM users WHERE user = '%s'", username);
    	msg = new Msg(Tasks.CreateCustomer, Tasks.Select, query2);
    	sendMsg(msg);
    	int id = msg.getObj(0);
    	
    	//Add customer to customer table
    	String query3 = String.format("INSERT INTO customer (id, status, credit_card) VALUES (%d, '%s', '%s')", id, "Not Approved", creditcard);
    	msg = new Msg(Tasks.CreateCustomer, Tasks.CreateCustomer_Insert_Customer, query3);
    	sendMsg(msg);
    	
    	if(msg.getInt() != 0)
    		lblErr.setText(username + " has been added successfuly!");
    	else
    		lblErr.setText("Something went wrong");
    }
    
    /**
     * Clean up all the error labels
     */
	private void cleanErrors() {
		errUser.setText("");
		errPassword.setText("");
		errName.setText("");
		errPhone.setText("");
		errAddress.setText("");
		errEmail.setText("");
		errCC.setText("");
		lblErr.setText("");
	}
	
	/**
     * Navigates back to the Customer Service screen.
     *
     * @param event The MouseEvent that triggered this method.
     */
    @Override
	public void back(MouseEvent event) {
		try {
			start("CustomerService", "Customer Service");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
